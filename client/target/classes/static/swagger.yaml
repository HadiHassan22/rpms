openapi: 3.0.1
info:
  title: Kogito business rules invocation - Spring Boot
  version: 0.16.0
paths:
  /persons/{id}/ChildrenHandling/{workItemId}/schema:
    get:
      operationId: getSchemaAndPhases_ChildrenHandling_0
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: workItemId
        in: path
        required: true
        schema:
          type: string
      - name: user
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
  /persons/{id}/ChildrenHandling/{workItemId}:
    get:
      operationId: getTask_ChildrenHandling_0
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: workItemId
        in: path
        required: true
        schema:
          type: string
      - name: user
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persons_5_TaskInput'
    post:
      operationId: completeTask_ChildrenHandling_0
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: workItemId
        in: path
        required: true
        schema:
          type: string
      - name: phase
        in: query
        schema:
          type: string
          default: complete
      - name: user
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persons_5_TaskOutput'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonsModelOutput'
    delete:
      operationId: abortTask_ChildrenHandling_0
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: workItemId
        in: path
        required: true
        schema:
          type: string
      - name: phase
        in: query
        schema:
          type: string
          default: abort
      - name: user
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonsModelOutput'
  /persons/{id}:
    get:
      operationId: getResource_persons
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonsModelOutput'
    put:
      operationId: updateModel_persons
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonsModel'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonsModelOutput'
    delete:
      operationId: deleteResource_persons
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonsModelOutput'
  /persons:
    get:
      operationId: getResources_persons
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonsModelOutput'
    post:
      operationId: createResource_persons
      parameters:
      - name: businessKey
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonsModelInput'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /persons/ChildrenHandling/schema:
    get:
      operationId: getSchema_ChildrenHandling_0
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
  /persons/{id}/tasks:
    get:
      operationId: getTasks_persons
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: user
        in: query
        schema:
          type: string
      - name: group
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkItem'
components:
  schemas:
    Person:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
          format: int32
        adult:
          type: boolean
    PersonsModelOutput:
      type: object
      properties:
        id:
          type: string
        person:
          $ref: '#/components/schemas/Person'
    PersonsModelInput:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
    PersonsModel:
      type: object
      properties:
        id:
          type: string
        person:
          $ref: '#/components/schemas/Person'
    Persons_5_TaskInput:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/Person'
        name:
          type: string
        id:
          type: string
    Persons_5_TaskOutput:
      type: object
    WorkItem:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        state:
          type: integer
          format: int32
        parameters:
          type: object
          additionalProperties:
            type: object
        phase:
          type: string
        results:
          type: object
          additionalProperties:
            type: object
        phaseStatus:
          type: string
        nodeInstanceId:
          type: string
